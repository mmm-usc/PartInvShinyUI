% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PartInv.R
\name{PartInv}
\alias{PartInv}
\alias{PartInvMulti_we}
\title{Classification Accuracy Analysis with MCAA}
\usage{
PartInv(
  cfa_fit = NULL,
  propsel = NULL,
  cut_z = NULL,
  weights_item = NULL,
  weights_latent = NULL,
  alpha = NULL,
  psi = NULL,
  lambda = NULL,
  theta = NULL,
  nu = NULL,
  pmix = NULL,
  pmix_ref = NULL,
  plot_contour = FALSE,
  show_mi_result = FALSE,
  labels = NULL,
  custom_colors = NULL,
  reference = NULL,
  kappa_r = NULL,
  kappa_f = kappa_r,
  alpha_r = NULL,
  alpha_f = alpha_r,
  phi_r = NULL,
  phi_f = phi_r,
  psi_r = NULL,
  psi_f = psi_r,
  lambda_r = NULL,
  lambda_f = lambda_r,
  tau_r = NULL,
  tau_f = tau_r,
  nu_r = NULL,
  nu_f = nu_r,
  Theta_r = NULL,
  Theta_f = Theta_r,
  ...
)

PartInvMulti_we(...)
}
\arguments{
\item{cfa_fit}{CFA model output from lavaan.}

\item{propsel}{Proportion of selection. If missing, computed using \code{cut_z}.}

\item{cut_z}{Pre-specified cutoff score on the observed composite. Ignored
when \code{propsel} has input.}

\item{weights_item}{A vector of item weights.}

\item{weights_latent}{A vector of latent factor weights.}

\item{alpha}{A list of length \code{g} containing \verb{1 x d} latent factor mean
vectors where \code{g} is the number of groups and \code{d} is the number of latent
dimensions. The first element is assumed to belong to the reference group.}

\item{psi}{A list of length \code{g} containing \verb{d x d} latent factor
variance-covariance matrices where \code{g} is the number of groups and \code{d} is
the number of latent dimensions. The first element is assumed to belong
to the reference group.}

\item{lambda}{A list of length \code{g} containing \verb{n x d} factor loading matrices
where \code{g} is the number of groups, \code{d} is the number of latent dimensions,
and \code{n} is the number of items. The first element is assumed
to belong to the reference group.}

\item{theta}{A list of length \code{g} containing \verb{1 x n} vectors or \verb{n x n}
matrices of unique factor variances and covariances, where \code{g} is the
number of groups and \code{n} is the number of items. The first
element is assumed to belong to the reference group.}

\item{nu}{A list of length \code{g} containing \verb{1 x n} measurement intercept
vectors where \code{g} is the number of groups and \code{n} is the number of items
. The first element is assumed to belong to the reference
group.}

\item{pmix}{List of length \code{g} containing the mixing proportions of each
group. If \code{NULL}, defaults to \code{1/g} for each group (i.e., equal sizes).}

\item{plot_contour}{Logical; whether the contour of the populations should be
plotted; \code{TRUE} by default.}

\item{show_mi_result}{If \code{TRUE}, perform selection accuracy analysis
for both the input parameters and the implied parameters based on a
strict invariance model, with common parameter values as weighted
averages of the input values using \code{pmix}.}

\item{labels}{A character vector with \code{g} elements to label the reference
and focal groups on the plot, where \code{g} is the number of groups. If \code{NULL}
groups are labeled as 'Reference' and 'Focal_1' through 'Focal_(g-1)'.}

\item{custom_colors}{Optional argument for specifying colors.}

\item{reference}{Optional argument for specifying the reference group.
Currently only functional when cfa_fit is provided.}

\item{alpha_r, alpha_f, nu_r, nu_f, Theta_r, Theta_f, psi_r, psi_f, lambda_r, lambda_f, phi_r, phi_f, tau_r, tau_f, kappa_r, kappa_f, pmix_ref}{Deprecated; included for backward compatibility. With two groups, '_r'
and '_f' suffixes refer to the reference group and the focal group.}

\item{...}{Other arguments for \code{\link[graphics]{contour}}.}
}
\value{
The output will be a list of six elements and a plot if
\code{plot_contour == TRUE}:
\item{propsel}{Proportion selected.}
\item{cutpt_xi}{Cut point on the latent scale (xi).}
\item{cutpt_z}{Cut point on the observed scale (Z).}
\item{summary}{A \verb{8 x (g + g - 1)} table, with columns representing
the reference and \code{g - 1} focal groups, and  the expected results
if the latent distribution of \code{g - 1} focal group match the
reference group. The rows represent probabilities of true
positive (A), false positive (B), true negative (C), false
negative (D); proportion selected, success ratio, sensitivity,
and specificity.}
\item{bivardata}{List of length \code{5} containing \verb{1 x g} vectors of
latent and observed means, standard deviations, and covariances
computed for each groups.}
\item{ai_ratio}{A list of length \code{g - 1} containing the Adverse
Impact (AI) ratio computed for each focal group. A result less
than 80\% may be considered evidence of adverse impact.}
If \code{show_mi_result = TRUE}, the returned list will have the
additional elements below:
\item{propsel_mi}{Proportion selected under strict invariance.}
\item{cutpt_xi_mi}{Cut point on the latent scale (xi) under strict
invariance.}
\item{cutpt_z_mi}{Cut point on the observed scale (Z) under strict
invariance.}
\item{summary_mi}{A \verb{8 x (g + g - 1)} table, with columns
representing the reference and \code{g - 1} focal groups and the
expected results if the latent distributions of \code{g - 1} focal
groups match the reference group, under strict invariance. The
rows represent probabilities of true positive (A), false positive
(B), true negative (C), false negative (D); proportion selected,
success ratio, sensitivity, and specificity.}
\item{bivardata_mi}{List of length \code{5} containing \verb{1 x g} vectors of
latent and observed means, standard deviations, and covariances
computed for each group under strict invariance.}
\item{labels}{List of labels.}
\item{functioncall}{Function call to PartInv.}
}
\description{
\code{PartInv, PartInvMulti_we} evaluates partial measurement invariance
using the multidimensional classification accuracy analysis framework
(Lai & Zhang, 2022), which is an extension of Millsap & Kwok's (2004)
approach.
}
\examples{
set.seed(7)  
cols <- c("salmon1", "lightgreen", "skyblue1", "pink")
sim_m <-
  "f =~ c(1, .7, 1) * x1 + c(.2, 1.1, 1) * x2 + 1 * x3 + 1 * x4 + 1 * x5
   f ~~ c(1, 1.3, 1.5) * f
   f ~  c(0, .5, 1) * 1
   x1 ~ c(0, .3, 0) * 1
   x3 ~ c(.3, 0, -.3) * 1
   x1 ~~ c(1, .5, 1) * x1"
dat_sim <- lavaan::simulateData(sim_m, sample.nobs = c(80, 100, 110))
fit_sim <- lavaan::cfa(model = sim_m, data = dat_sim, group = "group")
PartInv(cfa_fit = fit_sim, propsel = .05, plot_contour = TRUE, 
        custom_colors = cols[1:3], show_mi_result = TRUE)

library(lavaan)
HS <- HolzingerSwineford1939
HS$sex <- as.factor(HS$sex)
HS.model <- ' visual  =~ x1 + x2 + x3
              textual =~ x4 + x5 + x6
              speed   =~ x7 + x8 + x9 '
fit <- cfa(HS.model, data = HS, group = "sex")
PartInv(fit, propsel = .7, plot_contour = TRUE, show_mi_result = TRUE,
        labels = c("M", "F"))
# Two groups, single dimension
PartInv(cfa_fit = NULL, propsel = .30, weights_item = rep(1, 4),
        alpha = list(0, 0), psi = list(1, 1), 
        lambda = list(rep(1, 4), c(1, 1, .7, .4)),
        nu = list(rep(1, 4), rep(1, 4)), theta = list(diag(1, 4), diag(1, 4)),
        labels = c("Female", "Male"), show_mi_result = TRUE, 
        plot_contour = TRUE)
# Two groups, two dimensions
l_mat <- matrix(0, nrow = 5, ncol = 2)
l_mat[1:2, 1] <- c(.3, .7); l_mat[3:5, 2] <- c(.4, .8, .5)
PartInv(propsel = .05, weights_latent = c(.5, .5),
        alpha = list(c(0, 0), c(-.3, .1)),
        psi = list(matrix(c(1, .5, .5, 1), nrow = 2),
                   matrix(c(1, .5, .5, 1), nrow = 2)),
        lambda = list(l_mat, l_mat),
        nu = list(c(.3, .3, .01, .3, .1), c(.3, -.05, .3, -.03, .1)),
        theta = list(diag(1, 5), c(1, .9, .8, .8, 1)),
        plot_contour = TRUE, show_mi_result = TRUE)
# Multiple groups, multiple dimensions
l_mat <- matrix(c(.7, .8, -.4, .7, .6, .5, .8, -.3, .6, .6, .6, .7, .6, 
                  .6, .6), nrow = 15, ncol = 1)
nu_mat <- matrix(c(3.6, 3.1, 2.7, 2.9, 2.5, 2.1, 3.5, 2.6, 3.2, 2.8,
                   3.5, 3.3, 2.5, 3.4, 2.5), nrow = 15, ncol = 1)
nu_mat1 <- nu_mat2 <- nu_mat3 <- nu_mat
nu_mat1[c(1, 14:15), 1] <- c(3.9, 3.8, 2.8)
nu_mat2[c(9:10, 12, 15), 1] <- c(3.6, 3.2, 3.5, 2.8); nu_mat3[15] <- 2.9
th_mat <- (c(.6, .6, .8, .6, .8, .5, .7, 1.1, .8, .9, .6, .7, .8, .5, .9))
th_mat1 <- th_mat2 <- th_mat3 <- th_mat
th_mat1[1] <- .4; th_mat2[c(6, 14)] <- c(.9, .7); th_mat3[14] <- .7
PartInv(propsel = .25, pmix = rep(1/4, 4),
        alpha = list(0, -.7, -1.1, -1.1), psi = list(1, 1.2, 1.3, 1.3),
        nu = list(nu_mat, nu_mat1, nu_mat2, nu_mat3),
        lambda = list(l_mat, l_mat, l_mat, l_mat),
        theta = list(th_mat, th_mat1, th_mat2, th_mat3),
        plot_contour = TRUE, show_mi_result = TRUE,
        labels = c("G1", "G2", "G3", "G4"),
        custom_colors = cols, reference = "G2")
}
